# FROM debian:bullseye-slim
# FROM debian:bullseye-20220711-slim
FROM ubuntu:jammy-20231004 as ubuntu-jammy-202310

LABEL au.csiro.image.authors="jean-michel.perraud@csiro.au"
LABEL maintainer="J-M <jean-michel.perraud@csiro.au>"
LABEL product="Ubuntu Jammy image used for CI pipeline for streamflow forecasting"
LABEL version="0.1"

USER root

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Australia/Canberra
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

ARG CURRENT_UID_ARG
ENV CURRENT_UID=${CURRENT_UID_ARG}

# Azure devops pipelines uses nodejs. It may bring its own though, so not sure whether installing it here is a good idea or not. Maybe BYO is fine. Let's see.
# https://learn.microsoft.com/en-us/azure/devops/pipelines/process/container-phases?view=azure-devops

RUN apt-get update --yes && \
  apt-get install --yes --no-install-recommends \
  git \
  ssh-client \
  cmake \
  catch \
  g++ \
  nano \
  p7zip-full \
  curl \
  nodejs \
  libboost-system-dev \
  libboost-date-time-dev \
  libboost-regex-dev \
  libboost-filesystem-dev \
  libboost-graph-dev \
  libboost-thread-dev \
  libtbb-dev \
  libnetcdf-dev \
  libudunits2-dev \
  libeigen3-dev \
  libyaml-cpp-dev \
  libjsoncpp-dev \
  r-cran-knitr \
  r-cran-lubridate \
  r-cran-zoo \
  r-cran-xts \
  r-cran-ggplot2 \
  r-cran-dplyr \
  r-cran-mvtnorm \
  r-cran-plyr \
  r-cran-ncdf4 \
  r-cran-udunits2 \
  r-cran-igraph \
  r-cran-roxygen2 \
  r-cran-markdown \
  r-cran-stringr \
  r-cran-devtools \
  r-cran-readr \
  r-cran-tibble \
  r-cran-cpp11 \
  r-cran-rlang \
  r-cran-tidyselect \
  r-cran-lifecycle \
  r-cran-pillar \
  r-cran-viridis \
  r-cran-viridislite \
  r-cran-gridextra \
  r-cran-downloader \
  r-cran-htmltools \
  r-cran-glue \
  pandoc \
  pandoc-citeproc \
  python3 \
  python3-venv\
  python3-pip \
  dh-make  \
  equivs \
  devscripts \
  build-essential \
  dh-cmake 

# Ubuntu packaging seems to require some of these explicitely: 
RUN apt-get install -y \
  libtbb2 \
  libnetcdf19 \
  libyaml-cpp0.7 \
  libyaml-0-2 

RUN apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /baseimage

COPY setup_dependent_packages.r /baseimage
COPY setup-deps.sh /baseimage

RUN ./setup-deps.sh